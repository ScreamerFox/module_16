from fastapi import FastAPI, Path

from pydantic import BaseModel, Field

app = FastAPI()

users = {'1': 'Имя: Example, возраст: 18'}

class valid(BaseModel):
    username: str = Field(min_length=5, max_length=20, description="Enter username", examples=["UrbanUser"])
    age: int = Field(ge=18, le=120, description="Enter age", examples=[24])


@app.get("/users")
async def get_users():
    return users


@app.post("/user/{username}/{age}")
async def create_user(user: valid):
    user_id = str(int(max(users.keys(), key=int)) + 1)
    users[user_id] = f'Имя: {user.username}, возраст: {user.age}'
    return f"User {user_id} is register"


@app.put("/user/{user_id}/{username}/{age}'")
async def update_user(user_id: str, user: valid):
    users[user_id] = f'Имя: {user.username}, возраст: {user.age}'
    return f"The user {user_id} is updated"


@app.delete("/user/{user_id}")
async def delete_user(user_id: str):
    users.pop(user_id)
    return f"User {user_id} deleted"

